services:
  elasticsearch:
    container_name: container-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=elastic123
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - xpack.ml.enabled=true
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    restart: unless-stopped

  postgres:
    container_name: container-pg
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: kms-user
      POSTGRES_PASSWORD: kms-user123
      POSTGRES_DB: kms-db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  neo4j:
    container_name: container-neo4j
    image: neo4j:5.12
    ports:
      - "7474:7474"   # HTTP Browser
      - "7687:7687"   # Bolt protocol
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_apoc_export_file_enabled: "true"
      NEO4J_apoc_import_file_enabled: "true"
      NEO4J_apoc_import_file_use__neo4j__config: "true"
    volumes:
      - ./data:/data
      - ./plugins:/plugins
    restart: unless-stopped

  backend:
    container_name: container-backend
    build:
      context: ./backend
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - neo4j
    environment:
      DB_HOST: host.docker.internal
      DB_PORT: 5432
      DB_USER: kms-user
      DB_PASSWORD: kms-user123
      DB_NAME: kms-db
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: password
    volumes:
      - ./backend:/backend
      - /backend/node_modules
    restart: unless-stopped
    command: /bin/sh -c "npm install && npm run dev"

  frontend:
    container_name: container-frontend
    build:
      context: ./frontend
    ports:
      - "5173:5173" 
    depends_on:
      - backend
    environment:
      VITE_API_URL: "http://backend:8080"
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    restart: unless-stopped
    command: /bin/sh -c "npm install && npm run dev"

volumes:
  postgres-data:
  neo4j-data:
  elasticsearch-data: